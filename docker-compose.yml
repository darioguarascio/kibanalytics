version: "3.9"

services:
  redis:
    image: redis
    restart: unless-stopped
    hostname: redis
    volumes:
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "6379:6379"
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE}
        max-file: ${DOCKER_LOG_MAX_FILE}

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.1
    depends_on:
      - redis
    restart: unless-stopped
    hostname: logstash
    volumes:
      - ./config/logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
    env_file:
      - .env
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE}
        max-file: ${DOCKER_LOG_MAX_FILE}

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    depends_on:
      - logstash
    restart: unless-stopped
    hostname: elasticsearch
    environment:
      - "xpack.security.enabled=false"
      - "discovery.seed_hosts=127.0.0.1:9300"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS:--Xms512m -Xmx512m}"
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE}
        max-file: ${DOCKER_LOG_MAX_FILE}

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    depends_on:
      - elasticsearch
    restart: unless-stopped
    hostname: kibana
    volumes:
      - ./config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    env_file:
      - .env
    ports:
      - "5601:5601"
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE}
        max-file: ${DOCKER_LOG_MAX_FILE}

  node:
    build: .
    depends_on:
      - redis
    restart: unless-stopped
    hostname: node
    volumes:
      - .:/app
      - node_modules:/app/node_modules/
    working_dir: /app
    command: node ./index.js
    env_file:
      - .env
    ports:
      - "${EXPRESS_PORT}:${EXPRESS_PORT}"
    logging:
      options:
        max-size: ${DOCKER_LOG_MAX_SIZE}
        max-file: ${DOCKER_LOG_MAX_FILE}

  varnish:
    profiles: [ "varnish" ]
    container_name: varnish
    hostname: varnish
    image: darioguarascio/varnish-elk-docker:latest
    restart: unless-stopped
    depends_on:
      node:
        condition: service_started
    volumes:
      - /vcache
      - ./config/varnish/varnish_backends.vcl:/usr/share/varnish/vcl/varnish_backends.vcl
    ports:
      - ${VARNISH_LISTEN:-80}:80
    environment:
      ENV: ${VARNISH_ENV:-dev}
      VARNISHD_MEMORY: ${VARNISH_MEMORY:-malloc,32m}
      VARNISH_PURGE_KEY: ${VARNISH_PURGE_KEY:-dev}
    healthcheck:
      test: [ "CMD", "sh", "-c", "test -e /proc/`cat /varnish.pid` || (kill -s 15 -1 && (sleep 10; kill -s 9 -1))" ]
      interval: 5s
      timeout: 1s
      retries: 1
      start_period: 5s
    logging:
      driver: syslog
      options:
        cache-disabled: "false"
        syslog-address: udp://${VARNISH_LOGGER_IP:-127.0.0.1}:${VARNISH_LOGGER_PORT:-5445}

volumes:
  elasticsearch:
  node_modules: