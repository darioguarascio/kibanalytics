{"version":3,"file":"tracker.js","mappings":";;;;;;;;;;;;;;;AAAa;;AAE0C;;AAEvD,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,oEAAqB;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC5Ba;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,kCAAkC;;AAE9C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,UAAU,mBAAmB,YAAY,WAAW;AAClG,iCAAiC;AACjC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,SAAS,IAAI;AACb;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,OAAO;AACjC;;AAEA,uDAAuD,OAAO;;;;;;;;UCpE9D;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNa;;AAEuC;AAQzB;;AAE3B;AACA;;AAEA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kDAAkD,gBAAgB,WAAW;AAC7E;AACA;AACA,kCAAkC;AAClC,0BAA0B,sEAAoB;AAC9C,6BAA6B,uEAAqB;AAClD;AACA;AACA;;AAEA;;AAEA;AACA,YAAY,4DAAU;AACtB;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yBAAyB,gEAAc;AACvC,yBAAyB,4DAAc;AACvC,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4DAA4D,0BAA0B;AACtF;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;AAEA;;AAEA,mDAAmD,cAAc;AACjE;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,6BAA6B;AACvD;AACA,+DAA+D,UAAU;;AAEzE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oEAAoE,kEAAa;;AAEjF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,qCAAqC,gCAAgC;AACrE;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,8BAA8B,sEAAoB;AAClD,iCAAiC,uEAAqB;AACtD;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,sBAAsB,4DAAU;AAChC,4BAA4B,sDAAI;AAChC,+BAA+B,sDAAI;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,U","sources":["webpack://kibanalytics/./src/client/class-listener.client.js","webpack://kibanalytics/./src/client/utils.client.js","webpack://kibanalytics/webpack/bootstrap","webpack://kibanalytics/webpack/runtime/define property getters","webpack://kibanalytics/webpack/runtime/hasOwnProperty shorthand","webpack://kibanalytics/webpack/runtime/make namespace object","webpack://kibanalytics/./src/client/tracker.client.js"],"sourcesContent":["'use strict';\n\nimport { getPrefixedAttributes } from './utils.client';\n\nexport default (element, className, prefix, type, value, trackEventFn) => () => {\n    const classData = {\n        name: className,\n        prefix,\n        type,\n        value\n    };\n\n    const elementData = {\n        tagName: element.tagName\n    };\n\n    const customData = getPrefixedAttributes('data-kbs-', element);\n\n    const data = {\n        class: classData,\n        element: elementData,\n        ...customData\n    };\n\n    const options = {\n        sendBeacon: data.element.tagName === 'A'\n    };\n    return trackEventFn(type, data, options);\n}","'use strict';\n\nconst hook = (_this, method, callback) => {\n    const orig = _this[method];\n\n    return (...args) => {\n        callback.apply(null, args);\n\n        return orig.apply(_this, args);\n    };\n};\n\nconst doNotTrack = () => {\n    const { doNotTrack, navigator, external } = window;\n\n    const msTrackProtection = 'msTrackingProtectionEnabled';\n    const msTracking = () => {\n        return external && msTrackProtection in external && external[msTrackProtection]();\n    };\n\n    const dnt = doNotTrack || navigator.doNotTrack || navigator.msDoNotTrack || msTracking();\n\n    return dnt == '1' || dnt === 'yes';\n};\n\nconst adBlockEnabled = () => {\n    let ade;\n    const boe = document.getElementsByTagName('body')[0];\n\n    if (boe) {\n        ade = document.createElement('div');\n        ade.setAttribute('class', 'ads ad adsbox doubleclick ad-placement carbon-ads');\n        ade.setAttribute('style', 'height:1px;width:1px;position: absolute;left:-999px;top:-999px;');\n        ade.textContent = '&nbsp;';\n        boe.appendChild(ade);\n    }\n\n    return !!ade && ade.offsetHeight === 0;\n}\n\nconst cookiesEnabled = (navigator && navigator.cookieEnabled) || !!document.cookie;\n\nconst getPrefixedAttributes = (attrPrefix, element) => {\n    return element\n        .getAttributeNames()\n        .reduce((acc, name) => {\n            if (name.startsWith(attrPrefix)) {\n                const attrName = name.replace(attrPrefix, '');\n                if (attrName) return { ...acc, [attrName]: element.getAttribute(name) }\n            }\n            return acc;\n        }, {});\n}\n\nconst isJsonString = (str) => {\n    try {\n        JSON.parse(str);\n    } catch (e) {\n        console.warn('Invalid JSON string', str);\n        return false;\n    }\n    return true;\n}\n\nconst getClassPrefixRegExp = (prefix) => {\n    return new RegExp(`^${prefix}-([a-z]+)-([\\\\w]+[\\\\w-]*)$`);\n}\n\nconst getEventClassSelector = (prefix) => `[class*=\\'${prefix}-\\']`;\n\nexport {\n    hook,\n    doNotTrack,\n    adBlockEnabled,\n    cookiesEnabled,\n    getPrefixedAttributes,\n    getClassPrefixRegExp,\n    getEventClassSelector,\n    isJsonString\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\n\nimport classListener from './class-listener.client';\nimport {\n    adBlockEnabled,\n    cookiesEnabled,\n    doNotTrack,\n    hook,\n    getClassPrefixRegExp,\n    getEventClassSelector\n} from './utils.client.js';\n\n(window => {\n    const scriptStartedTs = (new Date()).getTime();\n\n    const {\n        screen,\n        navigator: { language, platform },\n        location,\n        document,\n        history,\n    } = window;\n\n    /*\n        Does not work with modules <script type=\"module\">\n        if we change this script to a module on the future\n     */\n    const script = document.currentScript;\n\n    const attr = script.getAttribute.bind(script);\n    const listeners = new Map();\n\n    let serverUrl = attr('data-server-url') || `${location.origin}/collect`; // default value\n    let autoTrack = attr('data-auto-track') !== 'false';\n    let serverSideData = {};\n    let eventClassPrefix = 'kbs'; // default value\n    let eventClassRegex = getClassPrefixRegExp(eventClassPrefix);\n    let eventClassSelector = getEventClassSelector(eventClassPrefix);\n    let callback = null;\n    let currentUrl = location.href;\n    let currentRef = document.referrer;\n\n    /* Collect metrics */\n\n    const collect = async (type, payload, sendBeacon = false) => {\n        if (doNotTrack()) return;\n        const eventTs = (new Date()).getTime();\n\n        const url = serverUrl;\n        const body = {\n            url: {\n                href: currentUrl\n            },\n            referrer: currentRef,\n            event: {\n                ts: {\n                    scriptStarted: scriptStartedTs,\n                    started: eventTs,\n                    scriptEventStartedDelta: eventTs - scriptStartedTs\n                },\n                type,\n                payload\n            },\n            device: {\n                platform,\n                screen: {\n                    width: screen.width,\n                    height: screen.height\n                }\n            },\n            browser: {\n                language,\n                adBlock: adBlockEnabled(),\n                cookies: cookiesEnabled\n            },\n            serverSide: serverSideData\n        };\n\n        if (sendBeacon) {\n            /*\n                A problem with sending analytics is that a site often wants to send analytics when the user\n                has finished with a page: for example, when the user navigates to another page. In this situation\n                the browser may be about to unload the page, and in that case the browser may choose not to send\n                asynchronous XMLHttpRequest requests.\n             */\n\n            const blob = new Blob([JSON.stringify(body)], { type: 'application/json' });\n            const queued = navigator.sendBeacon(url, blob);\n\n            /*\n                The sendBeacon() method returns true if the user agent successfully queued the data for transfer.\n                Otherwise, it returns false.\n             */\n            return (queued)\n                ? { status: 'success', event_id: 'sendBeacon' }\n                : { status: 'error', message: 'User agent failed to queue the data transfer' };\n        }\n\n        return await fetch(url, {\n            method: 'post',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(body),\n            credentials: 'include'\n        }).then(response => response.json());\n    };\n\n    /* Handle events */\n\n    const track = async (type = 'custom', data = {}, options = {}) => {\n        const response = await collect(type, data, options.sendBeacon);\n\n        if (callback) callback(response);\n        return response;\n    };\n\n    // @TODO keeps the reference, allow a public method to remove the event listner\n    const trackEvent = ({ selector, type, data, label }) => {\n        const element = document.querySelector(selector);\n        if (!element) throw new Error(`Element witg selector ${selector} not found.`);\n\n        element.addEventListener(type, () => track(label ?? type, data), true);\n    };\n\n    const trackEventList = (list) => {\n        for (const event of list) {\n            trackEvent(event);\n        }\n    };\n\n    const trackEventListUrl = async (url) => {\n        const list = await fetch(url, {\n            method: 'get',\n            headers: {\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json());\n\n        trackEventList(list);\n    };\n\n    /* Handle class events */\n\n    const addClassEvents = node => {\n        const elements = node.querySelectorAll(eventClassSelector);\n        Array.prototype.forEach.call(elements, addClassEvent);\n    };\n\n    const removeClassEvents = node => {\n        const elements = node.querySelectorAll(eventClassSelector);\n        Array.prototype.forEach.call(elements, removeClassEvent);\n    };\n\n    const addClassEvent = element => {\n        const classes = element.getAttribute('class')?.split(' ');\n        if (!classes) return;\n\n        for (const className of classes) {\n            if (!eventClassRegex.test(className)) continue;\n\n            const [prefix, type, value] = className.split('-');\n            if (!listeners.has(className)) listeners.set(className, classListener(element, className, prefix, type, value, track));\n\n            element.addEventListener(type, listeners.get(className), true);\n        }\n    };\n\n    const removeClassEvent = element => {\n        const classes = element.getAttribute('class')?.split(' ');\n        if (!classes) return;\n\n        for (const className of classes) {\n            const type = className.split('-')[1];\n\n            element.removeEventListener(type, listeners.get(className), true);\n            listeners.delete(className);\n        }\n    };\n\n    /* Handle history changes */\n\n    const handlePush = (state, title, url) => {\n        if (!url) return;\n\n        currentRef = currentUrl;\n        currentUrl = location.href;\n\n        if (currentUrl !== currentRef) {\n            track('pageview');\n        }\n    };\n\n    const observeDocument = () => {\n        const monitorMutate = mutations => {\n            mutations.forEach(mutation => {\n                const element = mutation.target;\n                addClassEvent(element);\n                addClassEvents(element);\n            });\n        };\n\n        const observer = new MutationObserver(monitorMutate);\n        observer.observe(document, { childList: true, subtree: true });\n    };\n\n    // @TODO Referal Host\n\n    /* Global */\n\n    // @TODO function to set all configurations at once\n    // @TODO maybe transform this object to a JavaScript class\n    // @TODO delay inicialization by html property, allowing initialization by JavaScript\n\n    const kbs = {\n        get serverUrl() {\n            return serverUrl;\n        },\n        set serverUrl(url) {\n            serverUrl = url;\n            return serverUrl;\n        },\n        get serverSideData() {\n            return serverSideData\n        },\n        set serverSideData(obj) {\n            serverSideData = (typeof obj === 'object') ? obj : {};\n        },\n        get eventClassPrefix() {\n            return eventClassPrefix;\n        },\n        set eventClassPrefix(prefix) {\n            removeClassEvents(document);\n\n            eventClassPrefix = prefix;\n            eventClassRegex = getClassPrefixRegExp(prefix);\n            eventClassSelector = getEventClassSelector(prefix);\n            addClassEvents(document);\n\n            return eventClassPrefix;\n        },\n        get callback() {\n            return callback;\n        },\n        set callback(fn) {\n            callback = (typeof fn === 'function') ? fn : null;\n            return callback;\n        },\n        track,\n        trackEvent,\n        trackEventList,\n        trackEventListUrl\n    };\n    Object.freeze(kbs);\n\n    if (!window.kbs) {\n        window.kbs = kbs;\n    }\n\n    /* Start */\n\n    if (autoTrack && !doNotTrack()) {\n        history.pushState = hook(history, 'pushState', handlePush);\n        history.replaceState = hook(history, 'replaceState', handlePush);\n\n        const update = () => {\n            if (document.readyState === 'complete') {\n                track('pageview');\n                addClassEvents(document);\n                observeDocument();\n            }\n        };\n\n        document.addEventListener('readystatechange', update, true);\n        update();\n    }\n})(window);"],"names":[],"sourceRoot":""}